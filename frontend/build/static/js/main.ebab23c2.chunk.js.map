{"version":3,"sources":["services/UserService.js","components/ListUserComponent.jsx","components/HeaderComponent.js","components/FooterComponent.jsx","components/CreateUserComponent.jsx","components/ViewUserComponent.jsx","App.js","serviceWorker.js","index.js"],"names":["USER_API_BASE_URL","axios","get","user","post","userId","put","delete","ListUserComponent","props","state","users","addUser","bind","editUser","deleteUser","id","UserService","then","res","setState","filter","this","history","push","getUsers","data","className","onClick","map","key","date","description","amount","status","receiver","jk","no_telp","address","style","marginLeft","viewUser","Component","HeaderComponent","href","FooterComponent","CreateUserComponent","saveOrUpdateUser","e","preventDefault","console","log","JSON","stringify","createUser","updateUser","changedate","event","target","value","changedescription","changeamount","changestatus","changereceiver","changejk","changeno_telp","changeaddress","match","params","getUserById","getTitle","type","placeholder","name","onChange","cancel","ViewUserComponent","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ebab23c2.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst USER_API_BASE_URL = \"http://localhost:9080/api/reports\"; // Ganti baseURL sesuai dengan endpoint yang diinginkan\n\nclass UserService {\n    getUsers() {\n        return axios.get(USER_API_BASE_URL);\n    }\n\n    createUser(user) {\n        return axios.post(USER_API_BASE_URL, user);\n    }\n\n    getUserById(userId) {\n        return axios.get(USER_API_BASE_URL + '/' + userId);\n    }\n\n    updateUser(user, userId) {\n        return axios.put(USER_API_BASE_URL + '/' + userId, user);\n    }\n\n    deleteUser(userId) {\n        return axios.delete(USER_API_BASE_URL + '/' + userId);\n    }\n}\n\nexport default new UserService();\n","import React, { Component } from 'react'\nimport UserService from '../services/UserService'\n\nclass ListUserComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n                users: []\n        }\n        this.addUser = this.addUser.bind(this);\n        this.editUser = this.editUser.bind(this);\n        this.deleteUser = this.deleteUser.bind(this);\n    }\n\n    deleteUser(id){\n        UserService.deleteUser(id).then( res => {\n            this.setState({users: \n                this.state.users.filter(user => user.id !== id)});\n        });\n    }\n    viewUser(id){\n        this.props.history.push(`/view-user/${id}`);\n    }\n    editUser(id){\n        this.props.history.push(`/add-user/${id}`);\n    }\n\n    componentDidMount(){\n        UserService.getUsers().then((res) => {\n            if(res.data==null)\n            {\n                this.props.history.push('/add-user/_add');\n            }\n            this.setState({ users: res.data});\n        });\n    }\n\n    addUser(){\n        this.props.history.push('/add-user/_add');\n    }\n\n    render() {\n        return (\n            <div>\n                 <h2 className=\"text-center\">\n                     Users List</h2>\n                 <div className = \"row\">\n                    <button className=\"btn btn-primary\"\n                     onClick={this.addUser}> Add User</button>\n                 </div>\n                 <br></br>\n                 <div className = \"row\">\n                        <table className \n                        = \"table table-striped table-bordered\">\n\n                            <thead>\n                                <tr>\n                                    <th>date</th>\n                                    <th>description</th>\n                                    <th>amount</th>\n                                    <th>status</th>\n                                    <th>receiver</th>\n                                    <th>jenis_kelamin</th>\n                                    <th>no telpon</th>\n                                    <th>address</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    this.state.users.map(\n                                        user => \n                                        <tr key = {user.id}>\n                                            <td>\n                                                {user.date}\n                                            </td>\n                                            <td>\n                                                {user.description}\n                                            </td>\n                                            <td>\n                                                {user.amount}\n                                            </td>\n                                            <td>\n                                                {user.status}\n                                            </td>\n                                            <td>\n                                                {user.receiver}\n                                            </td>\n                                            <td>\n                                                {user.jk}\n                                            </td>\n                                            <td>\n                                                {user.no_telp}\n                                            </td>\n                                            <td>\n                                                {user.address}\n                                            </td>\n                                             <td>\n                      <button onClick={ () => \n                          this.editUser(user.id)} \n                               className=\"btn btn-info\">Update \n                                 </button>\n                       <button style={{marginLeft: \"10px\"}}\n                          onClick={ () => this.deleteUser(user.id)} \n                             className=\"btn btn-danger\">Delete \n                                 </button>\n                       <button style={{marginLeft: \"10px\"}} \n                           onClick={ () => this.viewUser(user.id)}\n                              className=\"btn btn-info\">View \n                                  </button>\n                                    </td>\n                                        </tr>\n                                    )\n                                }\n                            </tbody>\n                        </table>\n                 </div>\n            </div>\n        )\n    }\n}\n\nexport default ListUserComponent\n","import React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nclass HeaderComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <header>\n                    <nav \n                    className=\"navbar navbar-dark bg-primary\">\n                        <div>\n                            <a href=\"/users\"\n                                className=\"navbar-brand\">\n                                    User Management App\n                            </a></div>\n                    </nav>\n                </header>\n            </div>\n        )\n    }\n}\n\nexport default HeaderComponent\n","import React, { Component } from 'react'\n\nclass FooterComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n                 \n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <footer className = \"footer\">\n                    <span className=\"text-muted\">\n                        All Rights Reserved 2021\n                         @Knowledgefactory.net</span>\n                </footer>\n            </div>\n        )\n    }\n}\n\nexport default FooterComponent\n","import React, { Component } from \"react\";\nimport UserService from \"../services/UserService\";\n\nclass CreateUserComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // step 2\n      id: this.props.match.params.id,\n      date: \"\",\n      description: \"\",\n      amount: \"\",\n      status: \"\",\n      receiver: \"\",\n      jk: \"\",\n      no_telp: \"\",\n      address: \"\",\n    };\n    this.changedate = this.changedate.bind(this);\n    this.changedescription = this.changedescription.bind(this);\n    this.changeamount = this.changeamount.bind(this);\n    this.changestatus = this.changestatus.bind(this);\n    this.changereceiver = this.changereceiver.bind(this);\n    this.changejk = this.changejk.bind(this);\n    this.changeno_telp = this.changeno_telp.bind(this);\n    this.changeaddress = this.changeaddress.bind(this);\n    this.saveOrUpdateUser = this.saveOrUpdateUser.bind(this);\n  }\n\n  // step 3\n  componentDidMount() {\n    // step 4\n    if (this.state.id === \"_add\") {\n      return;\n    } else {\n      UserService.getUserById(this.state.id).then((res) => {\n        let user = res.data;\n        this.setState({\n          date: user.date,\n          description: user.description,\n          amount: user.amount,\n          status: user.status,\n          receiver: user.receiver,\n          jk: user.jk,\n          no_telp: user.no_telp,\n          address: user.address,\n        });\n      });\n    }\n  }\n\n  saveOrUpdateUser = (e) => {\n    e.preventDefault();\n    let user = {\n      date: this.state.date,\n      description: this.state.description,\n      amount: this.state.amount,\n      status: this.state.status,\n      receiver: this.state.receiver,\n      jk: this.state.jk,\n      no_telp: this.state.no_telp,\n      address: this.state.address,\n    };\n    console.log(\"user => \" + JSON.stringify(user));\n\n    // step 5\n    if (this.state.id === \"_add\") {\n      UserService.createUser(user).then((res) => {\n        this.props.history.push(\"/users\");\n      });\n    } else {\n      UserService.updateUser(user, this.state.id).then((res) => {\n        this.props.history.push(\"/users\");\n      });\n    }\n  };\n\n  changedate = (event) => {\n    this.setState({ date: event.target.value });\n  };\n\n  changedescription = (event) => {\n    this.setState({ description: event.target.value });\n  };\n\n  changeamount = (event) => {\n    this.setState({ amount: event.target.value });\n  };\n\n  changestatus = (event) => {\n    this.setState({ status: event.target.value });\n  };\n\n  changereceiver = (event) => {\n    console.log(event.target.value);\n    this.setState({ receiver: event.target.value });\n  };\n\n  changejk = (event) => {\n    this.setState({ jk: event.target.value });\n  };\n\n  changeno_telp = (event) => {\n    this.setState({ no_telp: event.target.value });\n  };\n\n  changeaddress = (event) => {\n    this.setState({ address: event.target.value });\n  };\n\n  cancel() {\n    this.props.history.push(\"/users\");\n  }\n\n  getTitle() {\n    if (this.state.id === \"_add\") {\n      return <h3 className=\"text-center\">Add transaction</h3>;\n    } else {\n      return <h3 className=\"text-center\">Update transaction</h3>;\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <br></br>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"card col-md-6 offset-md-3 offset-md-3\">\n              {this.getTitle()}\n              <div className=\"card-body\">\n                <form>\n                  <div className=\"form-group\">\n                    <label> date: </label>\n                    <input\n                      type=\"date\"\n                      placeholder=\"date\"\n                      name=\"date\"\n                      className=\"form-control\"\n                      value={this.state.date}\n                      onChange={this.changedate}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label> description: </label>\n                    <input\n                      placeholder=\"description\"\n                      name=\"description\"\n                      className=\"form-control\"\n                      value={this.state.description}\n                      onChange={this.changedescription}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label> Amount: </label>\n                    <input\n                      placeholder=\"amount\"\n                      name=\"amount\"\n                      className=\"form-control\"\n                      value={this.state.amount}\n                      onChange={this.changeamount}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label> status: </label>\n                    <select\n                      name=\"status\"\n                      className=\"form-control\"\n                      value={this.state.status}\n                      onChange={this.changestatus}\n                    >\n                      <option>....</option>\n                      <option value=\"debit\">Debit</option>\n                      <option value=\"kredit\">Kredit</option>\n                    </select>\n                  </div>\n                  <div className=\"form-group\">\n                    <label> receiver: </label>\n                    <input\n                      placeholder=\"receiver\"\n                      name=\"receiver\"\n                      className=\"form-control\"\n                      value={this.state.receiver}\n                      onChange={this.changereceiver}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label> jenis_kelamin: </label>\n                    <select\n                      name=\"jk\"\n                      className=\"form-control\"\n                      value={this.state.jk}\n                      onChange={this.changejk}\n                    >\n                      <option>....</option>\n                      <option value=\"l\">Laki-Laki</option>\n                      <option value=\"p\">Perempuan</option>\n                    </select>\n                  </div>\n                  <div className=\"form-group\">\n                    <label> no telpon: </label>\n                    <input\n                      placeholder=\"no_telp\"\n                      name=\"no_telp\"\n                      className=\"form-control\"\n                      value={this.state.no_telp}\n                      onChange={this.changeno_telp}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label> address: </label>\n                    <input\n                      placeholder=\"address\"\n                      name=\"address\"\n                      className=\"form-control\"\n                      value={this.state.address}\n                      onChange={this.changeaddress}\n                    />\n                  </div>\n\n                  <button\n                    className=\"btn btn-success\"\n                    onClick={this.saveOrUpdateUser}\n                  >\n                    Save\n                  </button>\n                  <button\n                    className=\"btn btn-danger\"\n                    onClick={this.cancel.bind(this)}\n                    style={{ marginLeft: \"10px\" }}\n                  >\n                    Cancel\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CreateUserComponent;\n","import React, { Component } from \"react\";\nimport UserService from \"../services/UserService\";\n\nclass ViewUserComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: this.props.match.params.id,\n      user: {},\n    };\n  }\n\n  componentDidMount() {\n    UserService.getUserById(this.state.id).then((res) => {\n      this.setState({ user: res.data });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <br></br>\n        <div className=\"card col-md-6 offset-md-3\">\n          <h3 className=\"text-center\">View User Details</h3>\n          <div className=\"card-body\">\n            <div className=\"row\">\n              <label> date: </label>\n              <div> {this.state.user.date}</div>\n            </div>\n            <div className=\"row\">\n              <label> description: </label>\n              <div> {this.state.user.description}</div>\n            </div>\n            <div className=\"row\">\n              <label> amount: </label>\n              <div> {this.state.user.amount}</div>\n            </div>\n            <div className=\"row\">\n              <label> status: </label>\n              <div> {this.state.user.status}</div>\n            </div>\n            <div className=\"row\">\n              <label> receiver: </label>\n              <div> {this.state.user.receiver}</div>\n            </div>\n            <div className=\"row\">\n              <label> jenis_kelamin: </label>\n              <div> {this.state.user.jk}</div>\n            </div>\n            <div className=\"row\">\n              <label> no telepon: </label>\n              <div> {this.state.user.no_telp}</div>\n            </div>\n            <div className=\"row\">\n              <label> address: </label>\n              <div> {this.state.user.address}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ViewUserComponent;\n","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route, Switch} \n      from 'react-router-dom'\nimport ListUserComponent from './components/ListUserComponent';\nimport HeaderComponent from './components/HeaderComponent';\nimport FooterComponent from './components/FooterComponent';\nimport CreateUserComponent from './components/CreateUserComponent';\nimport ViewUserComponent from './components/ViewUserComponent';\n\nfunction App() {\n  return (\n    <div>\n        <Router>\n              <HeaderComponent />\n                <div className=\"container\">\n                    <Switch> \n                          <Route path = \"/\" exact component =\n                              {ListUserComponent}></Route>\n                          <Route path = \"/users\" component = \n                              {ListUserComponent}></Route>\n                          <Route path = \"/add-user/:id\" component = \n                              {CreateUserComponent}></Route>\n                          <Route path = \"/view-user/:id\" component = \n                              {ViewUserComponent}></Route>\n                         </Switch>\n                </div>\n              <FooterComponent />\n        </Router>\n    </div>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}